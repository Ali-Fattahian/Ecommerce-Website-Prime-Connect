{"version":3,"file":"static/js/989.b58d2652.chunk.js","mappings":"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","sources":["pages/OrderListPage.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport {\n  orderDelete,\n  updateOrderToDelivered,\n} from \"../store/slices/orderSlice\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport SideNavbar from \"../components/SideNavbar\";\nimport classes from \"./Admin/Admin.module.css\";\nimport EllipsesIcon from \"../icons/EllipsesIcon\";\n\nconst OrderListPage = () => {\n  const navigate = useNavigate();\n  const user = useSelector((state) => state.user);\n  const orderState = useSelector((state) => state.orders);\n  const { loading, error } = orderState;\n  const config = useSelector((state) => state.config);\n  const { baseURL } = config;\n  const { userInfo } = user;\n  const [orders, setOrders] = useState([]);\n  const [error1, setError] = useState(null);\n  const dispatch = useDispatch();\n\n  const setToDeliveredHandler = (orderId) => {\n    const token = userInfo.token;\n    if (\n      window.confirm(\"Are you sure you want to change this order to delivered?\")\n    ) {\n      dispatch(updateOrderToDelivered({ orderId, token }));\n    }\n  };\n\n  const deleteOrderHandler = (orderId) => {\n    const token = userInfo.token;\n    if (window.confirm(\"Are you sure you want to delete this order?\")) {\n      dispatch(orderDelete({ orderId, token }));\n      window.location.reload();\n    }\n  };\n\n  const fetchOrders = async (token) => {\n    try {\n      const { data } = await axios.get(`${baseURL}/orders`, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setOrders(data);\n    } catch (err) {\n      setError(\n        \"There was a problem loading the orders, Make sure you have a stable internet connection\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      fetchOrders(userInfo.token);\n    } else {\n      navigate(\"/login\");\n    }\n  }, [userInfo, navigate]);\n  return (\n    <div className={classes[\"admin-page\"]}>\n      <div className={classes[\"admin-page-left\"]}>\n        <SideNavbar />\n      </div>\n      <div\n        className={classes[\"admin-page-right\"]}\n        style={{ paddingTop: \"2rem\", paddingRight: \"2rem\" }}\n      >\n        {error1 && <Message variant=\"info\">{error1}</Message>}\n        {error && <Message variant=\"info\">{error}</Message>}\n        {loading && !error1 && !error && <Loader />}\n        {!error && !error1 && !loading && (\n          <Container id=\"user-list__container\" style={{ maxWidth: \"960px\" }}>\n            <h1 className=\"mt-4 font-family-secondary txt--black\">ORDERS</h1>\n            <Table\n              striped\n              responsive\n              bordered\n              className=\"border-lt mt-4 table-dark table-hover\"\n              id=\"user-list-table\"\n              style={{ verticalAlign: \"middle\" }}\n            >\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>USER</th>\n                  <th>METHOD</th>\n                  <th>DELIVERED</th>\n                  <th className=\"text-center\">\n                    <EllipsesIcon />\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map((order) => (\n                  <tr key={order.id}>\n                    <td>{order.id}</td>\n                    <td>{order.user.fullname}</td>\n                    <td>{order.paymentMethod}</td>\n                    <td>\n                      {order.deliveredAt\n                        ? order.deliveredAt.substring(0, 10)\n                        : \"Not Delivered Yet\"}\n                    </td>\n                    <td>\n                      <Button\n                        style={{\n                          color: \"black\",\n                          backgroundColor: \"transparent\",\n                          border: \"none\",\n                        }}\n                        className=\"btn-sm\"\n                      >\n                        <i\n                          className=\"fa fa-trash\"\n                          onClick={() => deleteOrderHandler(order.id)}\n                          style={{\n                            fontSize: \"1rem\",\n                            color: \"var(--bs-secondary)\",\n                          }}\n                        ></i>\n                      </Button>\n                      {!order.isDelivered && (\n                        <Button\n                          variant=\"light\"\n                          className=\"btn-sm\"\n                          onClick={() => {\n                            setToDeliveredHandler(order.id);\n                          }}\n                        >\n                          <i\n                            className=\"fa fa-edit\"\n                            style={{\n                              fontSize: \"1rem\",\n                              color: \"var(--bs-secondary)\",\n                            }}\n                            title=\"Set To Delivered\"\n                          ></i>\n                        </Button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Container>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OrderListPage;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"names":["navigate","useNavigate","user","useSelector","state","orderState","orders","loading","error","baseURL","config","userInfo","useState","setOrders","error1","setError","dispatch","useDispatch","fetchOrders","token","axios","headers","Authorization","data","useEffect","isAdmin","className","classes","style","paddingTop","paddingRight","variant","id","maxWidth","striped","responsive","bordered","verticalAlign","map","order","fullname","paymentMethod","deliveredAt","substring","color","backgroundColor","border","onClick","orderId","window","confirm","orderDelete","location","reload","deleteOrderHandler","fontSize","isDelivered","updateOrderToDelivered","setToDeliveredHandler","title","Button","React","ref","as","bsPrefix","size","active","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","disabled","displayName","defaultProps","Container","fluid","suffix"],"sourceRoot":""}